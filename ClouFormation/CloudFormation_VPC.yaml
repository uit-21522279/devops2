Resources:
  # VPC
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: "Name"
          Value: "MyVPC"

  # Internet Gateway
  MyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "MyInternetGateway"

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Public Subnet
  MyPublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.1.0/24"
      VpcId: !Ref MyVPC
      AvailabilityZone: "ap-southeast-2b"
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: "Name"
          Value: "MyPublicSubnet"

  # Private Subnet
  MyPrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.2.0/24"
      VpcId: !Ref MyVPC
      AvailabilityZone: "ap-southeast-2b"
      Tags:
        - Key: "Name"
          Value: "MyPrivateSubnet"

  # NAT Gateway
  MyNATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt MyEIP.AllocationId
      SubnetId: !Ref MyPublicSubnet
      Tags:
        - Key: "Name"
          Value: "MyNATGateway"

  # Elastic IP for NAT Gateway
  MyEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  # Public Route Table
  MyPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "MyPublicRouteTable"

  # Public Route for Internet Access
  MyPublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  # Associate Public Subnet with Public Route Table
  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyPublicRouteTable

  # Private Route Table
  MyPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "MyPrivateRouteTable"

  # Private Route for NAT Gateway
  MyPrivateRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref MyPrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref MyNATGateway

  # Associate Private Subnet with Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPrivateSubnet
      RouteTableId: !Ref MyPrivateRouteTable

  # Default Security Group for VPC
  DefaultSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Default security group for VPC"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: "-1" # Allow all inbound traffic
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - IpProtocol: "-1" # Allow all outbound traffic
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: "DefaultSecurityGroup"
